(neg? 0)
(pos? 0)
(get-all '[1 2 3'])
(get-all '[1 2 3])
(day2.core/get-all '[1 2 3 ])
(mapv valid? (day2.core/get-all '[1 2 3 ]))
(mapv day2.core/valid? (day2.core/get-all '[1 2 3 ]))
(any (mapv day2.core/valid? (day2.core/get-all '[1 2 3 ])))
(or (mapv day2.core/valid? (day2.core/get-all '[1 2 3 ])))
(and (mapv day2.core/valid? (day2.core/get-all '[1 2 3 ])))
 (mapv day2.core/valid? (day2.core/get-all '[1 2 3 ]))
(any? (mapv day2.core/valid? (day2.core/get-all '[1 2 3 ])))
(day2.core/jump-size '[1 2 3 4 5])
(day2.core/jump-size '[ (1 2) (2 3) (3 4) ])
(day2.core/valid? '[ (1 2) (2 3) (3 4) ])
(day2.core/valid? '[ 1 2 3 4  ])
(day2.core/valid? '[ 1 2 3 4] )
(partition 2 1 '[1 2 3 4 5])
(day2.core/valid? '[ 1 2 3 4] )
(day2.core/get-all '[1 2 7 8 9])
(map valid? (day2.core/get-all '[1 2 7 8 9]))
(map day2.core/valid? (day2.core/get-all '[1 2 7 8 9]))
(map day2.core/valid? (day2.core/get-all '[7 6 4 2 1]))
(map day2.core/valid? (day2.core/get-all '[1 2 7 8 9]))
(any? (map day2.core/valid? (day2.core/get-all '[1 2 7 8 9])))
 (map day2.core/valid? (day2.core/get-all '[1 2 7 8 9]))
(every? (map day2.core/valid? (day2.core/get-all '[1 2 7 8 9])))
(some true?  (map day2.core/valid? (day2.core/get-all '[1 2 7 8 9])))
(def a "ab1ab2ab3ab4")
(re-find #"\d" a)
(re-seq "#\d" a)
(re-seq #"\d" a)
(def a "xmul(2,4)%&mul[3,7]!@^do_not_mul(5,5)+mul(32,64]then(mul(11,8)mul(8,5))")
(re-seq #"mul(\d+,\d")" a)
)
(re-seq #"mul\(\d+,\d"\)" a))
(re-seq #"mul\(\d+,\d"\)" a)
)
(def a "xmul(2,4)%&mul[3,7]!@^do_not_mul(5,5)+mul(32,64]then(mul(11,8)mul(8,5))")
(re-seq #"mul\(" a)
(re-seq #"mul\(\d+" a)
(re-seq #"mul\(\d+," a)
(re-seq #"mul\(\d+,\d+\)" a)
(re-seq #"mul\((\d+),\d+\)" a)
(re-seq #"mul\((\d+),(\d+)\)" a)
(rest (re-seq #"mul\((\d+),(\d+)\)" a))
(map rest  (re-seq #"mul\((\d+),(\d+)\)" a))
(day3.core/vmult '[[1 2]])
(vmult )
(day3.core/vmult '[[1 2]])
(day3.core/vmult '[1 2])
